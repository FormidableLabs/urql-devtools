version: 2

.node_env: &node_env
  docker:
    - image: node:13

.node_modules_cache: &node_modules_cache
  restore_cache:
    keys:
      - node-cache-{{ checksum "yarn.lock" }}-{{ checksum ".circleci/config.yml" }}

.build_cache: &build_cache
  restore_cache:
    keys:
      - build-cache-{{ .Revision }}

jobs:
  install:
    <<: *node_env
    steps:
      - checkout
      - *node_modules_cache
      - run:
          name: Check for dependencies
          command: "([[ -d node_modules ]] && circleci-agent step halt) || exit 0"
      - run: yarn install --frozen-lockfile
      - save_cache:
          key: node-cache-{{ checksum "yarn.lock" }}-{{ checksum ".circleci/config.yml" }}
          paths:
            - "node_modules"

  lint:
    <<: *node_env
    steps:
      - checkout
      - *node_modules_cache
      - run: yarn run lint

  prettier:
    <<: *node_env
    steps:
      - checkout
      - *node_modules_cache
      - run: yarn run lint:prettier

  test:
    <<: *node_env
    steps:
      - checkout
      - *node_modules_cache
      - run: TZ=Europe/London yarn run test --coverage

  visual regression:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run: ./regression.sh --ci
      - store_artifacts:
          path: src/panel/__image_snapshots__/__diff_output__/

  build:
    <<: *node_env
    steps:
      - checkout
      - *node_modules_cache
      - run: apt-get update && apt-get -y install zip
      - run: yarn run build
      - run: yarn run bundle
      - save_cache:
          key: build-cache-{{ .Revision }}
          paths:
            - "dist"
            - "extension.zip"
      - store_artifacts:
          path: extension.zip
      - store_artifacts:
          path: dist/electron

  lint firefox:
    <<: *node_env
    steps:
      - checkout
      - *node_modules_cache
      - *build_cache
      - run: yarn run lint:firefox

  verify version:
    <<: *node_env
    steps:
      - checkout
      - run:
          command: |
            node -e "process.env.CIRCLE_TAG === \`v\${require('./package.json').version}\` ? process.exit(0) : (console.error('Tag version does not line up with version in package.json') || process.exit(1))"
            (sed -n '3p' CHANGELOG.md | grep -i $CIRCLE_TAG) && echo "Version documented in changelog" || (echo "Version not documented in changelog" && exit 1)

  deploy chrome:
    docker:
      - image: cibuilds/chrome-extension
    steps:
      - checkout
      - *build_cache
      - run:
          command: |
            ACCESS_TOKEN=$(curl --fail "https://www.googleapis.com/oauth2/v4/token" -d "client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}&refresh_token=${REFRESH_TOKEN}&grant_type=refresh_token" | jq -r .access_token)
            curl --fail -H "Authorization: Bearer ${ACCESS_TOKEN}" -H "x-goog-api-version: 2" -X PUT -T ./extension.zip "https://www.googleapis.com/upload/chromewebstore/v1.1/items/${APP_ID}"
            curl --fail -H "Authorization: Bearer ${ACCESS_TOKEN}" -H "x-goog-api-version: 2" -H "Content-Length: 0" -X POST "https://www.googleapis.com/chromewebstore/v1.1/items/${APP_ID}/publish"

  deploy firefox:
    <<: *node_env
    steps:
      - checkout
      - *node_modules_cache
      - *build_cache
      - run:
          command: |
            cd dist
            ERR=$($(npm bin)/web-ext sign --channel listed --api-key $FIREFOX_API_KEY --api-secret $FIREFOX_API_SECRET --id {c11f3a69-f159-4708-b044-853066c2d2fe} || true)
            (grep -qi "Your add-on has been submitted for review" <<< $ERR) && echo "Addon submitted for review." || (echo "Addon not submitted for review" && echo $ERR && exit 1)

workflows:
  version: 2
  build_and_test:
    jobs:
      - install:
          filters:
            tags:
              only: /.*/
      - lint:
          requires:
            - install
          filters:
            tags:
              only: /.*/
      - prettier:
          requires:
            - install
          filters:
            tags:
              only: /.*/
      - test:
          requires:
            - install
          filters:
            tags:
              only: /.*/
      - visual regression:
          requires:
            - install
          filters:
            tags:
              only: /.*/
      - build:
          requires:
            - install
          filters:
            tags:
              only: /.*/
      - verify version:
          requires:
            - build
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - lint firefox:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - deploy chrome:
          requires:
            - install
            - lint
            - prettier
            - test
            - build
            - visual regression
            - lint firefox
            - verify version
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - deploy firefox:
          requires:
            - install
            - lint
            - prettier
            - test
            - build
            - visual regression
            - lint firefox
            - verify version
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
